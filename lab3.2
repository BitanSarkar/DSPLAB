float x[]={-87.17307638,-109.5495333,11.00037444,163.4286511,...,-5.472668004,-17.77934267
};
float baseline[75]={0};
float acf[75]={0};
float avg = 0;
float F=25.0;
void autocorr(float y[]);
void smooth(int n, int w);
float mean(int n);
void setup() {
  smooth(75,10);
  avg = mean(75);
  Serial.begin(9600);
}
void loop() {
    autocorr(x);
    int pos = 0;
    for(pos=1;pos<75;pos++){
      if(acf[pos]<=acf[pos-1] && acf[pos]<=acf[pos+1]){
        break;
      }
    }
    float maxx = -100;
    int maxxPos = pos;
    for(int j=pos;j<75;j++){
      if(maxx<acf[j]){
        maxx=acf[j];
        maxxPos=j;
      }
    }
    float pulse_rate = 60*F/((maxxPos+0.0));
    Serial.println(pulse_rate);
    for(int j=0;j<75;j++){
      acf[j]=0.0;
    }
  }
void autocorr(float y[]){
  acf[0]=0.0;
  for(int j=0;j<75;j++){
      acf[0]+=y[j]*y[j];
  }
  for(int d=1;d<75;d++){
    float sum = 0.0;
    for(int j=d;j<75;j++){
      sum+=y[j]*y[j-d];
    }
    acf[d]=sum/acf[0];
  }
  acf[0]=1;
}
void smooth(int n, int w){
  for(int i=0;i<n;i++){
    float avg = 0.0;
    float c = 0.0;
    for(int j=i;j<=i+w && j<n; j++){
      avg+=x[j];
      c++;
    }
    avg/=c;
    x[i] = avg;
  }
}
float mean(int n){
  float avg=0.0;
  for(int i=0;i<n;i++){
    avg+=x[i];
  }
  avg/=(n+0.0);
  return avg;
}
